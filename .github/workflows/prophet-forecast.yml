name: Prophet Forecasting Demo

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 9 * * 1'  # Weekly updates every Monday at 9 AM UTC
  workflow_dispatch:
    inputs:
      forecast_days:
        description: 'Number of days to forecast'
        required: false
        default: '180'
        type: string

jobs:
  forecast-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install prophet plotly pandas numpy matplotlib
        
    - name: Create outputs directory
      run: mkdir -p outputs
      
    - name: Run Prophet forecasting
      run: python prophet_demo.py
      env:
        FORECAST_DAYS: ${{ github.event.inputs.forecast_days || '180' }}
        
    - name: List generated files
      run: |
        echo "Generated files:"
        ls -la outputs/
        
    - name: Commit results to repository
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        git add -f outputs/
        
        if ! git diff --cached --quiet; then
          git commit -m "Auto-update Prophet forecast results"
          git push
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync-to-huggingface:
    runs-on: ubuntu-latest
    if: contains(toJson(github.event.commits.*.modified), 'app.py')
    needs: forecast-analysis
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Clone HuggingFace repository
      run: |
        git clone https://huggingface.co/spaces/Talebi-user-2025678/prophet-demo hf-repo
    
    - name: Copy updated app.py
      run: cp app.py hf-repo/
    
    - name: Push to HuggingFace
      run: |
        cd hf-repo
        git config user.email "action@github.com"
        git config user.name "GitHub Action Bot"
        git add app.py
        if ! git diff --cached --quiet; then
          git commit -m "Auto-sync app.py from GitHub"
          git push
        else
          echo "No changes to push"
        fi
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
